---
# tasks file for parse-google-sheets
- name: Build auth object from vars
  set_fact:
    auth:
      auth_provider_x509_cert_url: "{{ auth_provider_x509_cert_url }}"
      auth_uri: "{{ auth_uri }}"
      client_x509_cert_url: "{{ client_x509_cert_url }}"
      client_email: "{{ client_email }}"
      client_id: "{{ client_id }}"
      private_key: "{{ private_key }}"
      private_key_id: "{{ private_key_id }}"
      project_id: "{{ project_id }}"
      token_uri: "{{ token_uri }}"
  no_log: true

- name: Set timestamp for filenames
  set_fact:
    timestamp: "{{ ansible_date_time.iso8601 }}"

- name: Fetch sheet data
  ansible.builtin.command:
    argv:
      - "/usr/bin/python3"
      - "{{ role_path }}/files/sheet_to_csv.py"
      - "-a {{ auth | to_json }}"
      - "-s {{ spreadsheet_id }}"
      - "-r {{ range }}"
      - "-p {{ region }}"
      - "-t {{ timestamp }}"
  register: py_output

- name: Print Python Debugging info
  debug:
    var: py_output
    verbosity: 2

- name: Use CSV module to read in data
  community.general.read_csv:
    path: "/tmp/{{ region }}-{{ timestamp }}.csv"
  register: csvopps

- name: Delete old csv file to preven cruft
  ansible.builtin.file:
    path: "/tmp/{{ region }}-{{ timestamp }}.csv"
    state: absent
  when: ansible_verbosity <=  2

- name: Set Asana Stats
  set_stats:
    data:
      csvopps: "{{ csvopps }}"

- name: Print out CSV data
  debug:
    var: csvopps.list
